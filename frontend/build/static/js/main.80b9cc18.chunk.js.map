{"version":3,"sources":["components/NavBar/NavItem/NavItem.js","components/NavBar/NavBar.js","components/Button/Button.js","components/Footer/Footer.js","hoc/Layout/Layout.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/Home/Home.js","components/DeleteButton/DeleteButton.js","components/EnlargedImage/EnlargedImage.js","components/MediaItem/MediaItem.js","components/UI/Spinner/Spinner.js","containers/MediaItems/MediaItems.js","App.js","serviceWorker.js","index.js"],"names":["NavItem","props","className","to","link","children","Navbar","button","onClick","click","disabled","name","navigationToLinkdin","window","open","footer","Layout","Backdrop","closeModalHandler","Modal","CSSTransition","in","isModalVisible","classNames","timeout","unmountOnExit","appear","modalType","Home","state","selectedFile","isUploadDisabled","isModalPositive","isFileImage","file","split","fileSelectedHandler","e","console","log","target","files","setState","fileUploadHandler","a","preventDefault","toBase64","Promise","res","rej","reader","FileReader","readAsDataURL","onload","result","onerror","err","newImage","path","axios","post","then","catch","prevState","message","this","style","color","type","onChange","display","ref","fileInput","Component","DeleteButton","width","height","viewBox","xmlns","deleteImageHandler","d","fill","EnlargedImage","enlargeImageHandler","MediaItem","id","src","alt","Spinner","MediaItems","images","loading","imagePath","getImagesHandler","get","data","idOfImage","delete","pathOfImage","media","map","image","key","App","component","Boolean","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80b9cc18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavItem.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavItem = props => (\r\n  <li className=\"NavItem\">\r\n    <NavLink to={props.link}>{props.children}</NavLink>\r\n  </li>\r\n);\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport NavItem from \"./NavItem/NavItem\";\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"NavBar\">\r\n    <ul>\r\n      <NavItem link=\"/\">Home</NavItem>\r\n      <NavItem link=\"/media\">Media</NavItem>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst button = props => {\r\n  return (\r\n    <button className=\"Button\" onClick={props.click} disabled={props.disabled}>\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\nexport default button;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst navigationToLinkdin = () => {\r\n  window.open(\"https://www.linkedin.com/in/edenavital/\", \"_blank\"); //to open new page\r\n};\r\n\r\nconst footer = () => (\r\n  <div className=\"Footer\">\r\n    <div className=\"Footer-top\">\r\n      <p>My Linkdin Profile</p>\r\n      <Button name=\"Click Me\" click={navigationToLinkdin} />\r\n    </div>\r\n    <div className=\"Footer-bottom\">\r\n      <p>\r\n        <span>Â© 2019 Copyright:</span> Eden Avital\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default footer;\r\n","import React from \"react\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <>\r\n      <div className=\"Layout\" />\r\n      <NavBar />\r\n      <main>{props.children}</main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport \"./Backdrop.css\";\r\n//props: isModalVisible, clicked()\r\nconst Backdrop = props => (\r\n  <div className={\"Backdrop\"} onClick={props.closeModalHandler}></div>\r\n);\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n//props: isModalVisible, closedModalHandler()\r\n// isModalVisible - The whole Modal appears according to this boolean\r\n// closedModalHandler() - Changes the isModalVisible prop to false - Which hides the Modal & Backdrop\r\n// modalType - Select the Modal animation type (text / img)\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={props.isModalVisible}\r\n        classNames={\"Backdrop\"}\r\n        timeout={750}\r\n        unmountOnExit\r\n        appear\r\n      >\r\n        <Backdrop closeModalHandler={props.closeModalHandler} />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={props.isModalVisible}\r\n        classNames={\"Modal \" + props.modalType}\r\n        timeout={750}\r\n        unmountOnExit\r\n        appear\r\n      >\r\n        {props.children}\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    selectedFile: { name: \"null\" },\r\n    isUploadDisabled: true,\r\n    isModalVisible: false,\r\n    isModalPositive: true\r\n  };\r\n\r\n  //Returns true if a file's type is an image\r\n  isFileImage = file => {\r\n    return file && file[\"type\"].split(\"/\")[0] === \"image\";\r\n  };\r\n\r\n  //Invokes when the user picks a file by the Browse button - Manipulates the states according to the selected file\r\n  fileSelectedHandler = e => {\r\n    console.log(\"fileSelectedHandler invoked\");\r\n    console.log(\"The selected file is: \", e.target.files[0]);\r\n    if (!this.isFileImage(e.target.files[0])) {\r\n      this.setState({\r\n        selectedFile: null,\r\n        isUploadDisabled: true,\r\n        isModalVisible: true,\r\n        isModalPositive: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        selectedFile: e.target.files[0],\r\n        isUploadDisabled: false,\r\n        isModalPositive: true\r\n      });\r\n    }\r\n  };\r\n\r\n  //Invokes when the user clicks on the Upload button - Uploads the file to the server's database\r\n  fileUploadHandler = async e => {\r\n    e.preventDefault();\r\n    console.log(\"fileUploadHandler invoked\");\r\n\r\n    const toBase64 = file =>\r\n      new Promise((res, rej) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n          res(reader.result);\r\n        };\r\n        reader.onerror = err => {\r\n          rej(err);\r\n        };\r\n      });\r\n\r\n    const newImage = {\r\n      name: this.state.selectedFile.name,\r\n      path: await toBase64(this.state.selectedFile)\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/media\", newImage)\r\n      .then(() => {\r\n        this.setState({ isModalVisible: true });\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    this.setState(prevState => ({\r\n      selectedFile: null,\r\n      isUploadDisabled: !prevState.isUploadDisabled\r\n    }));\r\n  };\r\n\r\n  //Manipulation of the Modal component - Closes it\r\n  closeModalHandler = () => {\r\n    this.setState({ isModalVisible: false });\r\n  };\r\n\r\n  render() {\r\n    //Modal's message to the user, depending on the state - isModalPositive\r\n    let message = this.state.isModalPositive ? (\r\n      <h4 style={{ color: \"green\" }}>\r\n        The image has been successfully uploaded!\r\n      </h4>\r\n    ) : (\r\n      <h4 style={{ color: \"red\" }}>The selected file is not an image!</h4>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          isModalVisible={this.state.isModalVisible}\r\n          closeModalHandler={this.closeModalHandler}\r\n          modalType=\"text\"\r\n        >\r\n          <div className=\"TextOfModal\">{message}</div>\r\n        </Modal>\r\n\r\n        <div className=\"Home\">\r\n          <h1>Welcome to my Uploading website</h1>\r\n          <h2>Click on the browse button in order to upload media!</h2>\r\n          <input\r\n            type=\"file\"\r\n            onChange={this.fileSelectedHandler}\r\n            style={{ display: \"none\" }}\r\n            ref={fileInput => (this.fileInput = fileInput)}\r\n          />\r\n          <Button name=\"Browse\" click={() => this.fileInput.click()} />\r\n\r\n          <Button\r\n            name=\"Upload\"\r\n            click={this.fileUploadHandler}\r\n            disabled={this.state.isUploadDisabled}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./DeleteButton.css\";\r\n\r\nconst DeleteButton = props => {\r\n  return (\r\n    <svg\r\n      className=\"DeleteButton\"\r\n      width=\"17px\"\r\n      height=\"17px\"\r\n      viewBox=\"0 0 511.992 511.992\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      onClick={props.deleteImageHandler}\r\n    >\r\n      <path\r\n        d=\"m415.402344 495.421875-159.40625-159.410156-159.40625 159.410156c-22.097656 22.09375-57.921875 22.09375-80.019532 0-22.09375-22.097656-22.09375-57.921875 0-80.019531l159.410157-159.40625-159.410157-159.40625c-22.09375-22.097656-22.09375-57.921875 0-80.019532 22.097657-22.09375 57.921876-22.09375 80.019532 0l159.40625 159.410157 159.40625-159.410157c22.097656-22.09375 57.921875-22.09375 80.019531 0 22.09375 22.097657 22.09375 57.921876 0 80.019532l-159.410156 159.40625 159.410156 159.40625c22.09375 22.097656 22.09375 57.921875 0 80.019531-22.097656 22.09375-57.921875 22.09375-80.019531 0zm0 0\"\r\n        fill=\"#e76e54\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport default DeleteButton;\r\n","import React from \"react\";\r\nimport \"./EnlargedImage.css\";\r\nconst EnlargedImage = props => (\r\n  <svg\r\n    className=\"EnlargedImage\"\r\n    width=\"17px\"\r\n    height=\"17px\"\r\n    viewBox=\"0 0 215.35 215.35\"\r\n    onClick={props.enlargeImageHandler}\r\n  >\r\n    <g>\r\n      <path\r\n        d=\"M7.5,65.088c4.143,0,7.5-3.358,7.5-7.5V25.61l48.305,48.295c1.465,1.464,3.384,2.196,5.303,2.196\r\n\t\tc1.92,0,3.84-0.732,5.304-2.197c2.929-2.929,2.929-7.678-0.001-10.606L25.604,15.002h31.985c4.142,0,7.5-3.358,7.5-7.5\r\n\t\tc0-4.142-3.357-7.5-7.5-7.5H7.5c-4.143,0-7.5,3.358-7.5,7.5v50.087C0,61.73,3.357,65.088,7.5,65.088z\"\r\n      />\r\n      <path\r\n        d=\"M207.85,150.262c-4.143,0-7.5,3.358-7.5,7.5v31.979l-49.792-49.792c-2.93-2.929-7.678-2.929-10.607,0\r\n\t\tc-2.929,2.929-2.929,7.678,0,10.606l49.791,49.791h-31.977c-4.143,0-7.5,3.358-7.5,7.5c0,4.142,3.357,7.5,7.5,7.5h50.086\r\n\t\tc4.143,0,7.5-3.358,7.5-7.5v-50.084C215.35,153.62,211.992,150.262,207.85,150.262z\"\r\n      />\r\n      <path\r\n        d=\"M64.792,139.949L15.005,189.74v-31.978c0-4.142-3.357-7.5-7.5-7.5s-7.5,3.358-7.5,7.5v50.086c0,4.142,3.357,7.5,7.5,7.5\r\n\t\th50.084c4.142,0,7.5-3.358,7.5-7.5s-3.357-7.5-7.5-7.5H25.611l49.788-49.793c2.929-2.929,2.929-7.678-0.001-10.607\r\n\t\tC72.471,137.02,67.722,137.02,64.792,139.949z\"\r\n      />\r\n      <path\r\n        d=\"M207.85,0.002h-50.086c-4.143,0-7.5,3.358-7.5,7.5c0,4.142,3.357,7.5,7.5,7.5h31.979l-48.298,48.301\r\n\t\tc-2.929,2.929-2.929,7.678,0.001,10.607c1.464,1.464,3.384,2.196,5.303,2.196c1.919,0,3.839-0.733,5.304-2.197l48.298-48.301v31.98\r\n\t\tc0,4.142,3.357,7.5,7.5,7.5c4.143,0,7.5-3.358,7.5-7.5V7.502C215.35,3.359,211.992,0.002,207.85,0.002z\"\r\n      />\r\n    </g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n  </svg>\r\n);\r\n\r\nexport default EnlargedImage;\r\n","import React from \"react\";\r\nimport \"./MediaItem.css\";\r\nimport DeleteButton from \"../DeleteButton/DeleteButton\";\r\n//props: id, name, path, deleteImageHandler(id), enlargeImageHandler(path)\r\nimport EnlargedImage from \"../EnlargedImage/EnlargedImage\";\r\n\r\nconst MediaItem = props => (\r\n  <div className=\"MediaItem\">\r\n    <DeleteButton\r\n      deleteImageHandler={() => props.deleteImageHandler(props.id)}\r\n    />\r\n    <EnlargedImage\r\n      enlargeImageHandler={() => props.enlargeImageHandler(props.path)}\r\n    />\r\n    <img src={props.path} alt=\"Media\" />\r\n    <h4>{props.name}</h4>\r\n  </div>\r\n);\r\n\r\nexport default MediaItem;\r\n","import React from \"react\";\r\n\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => (\r\n  <div className=\"lds-roller\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./MediaItems.css\";\r\nimport MediaItem from \"../../components/MediaItem/MediaItem\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nclass MediaItems extends Component {\r\n  state = {\r\n    images: [],\r\n    loading: true,\r\n    isModalVisible: false,\r\n    imagePath: null\r\n  };\r\n\r\n  //When the user clicks on Media route - fetch the images from the server\r\n  componentDidMount() {\r\n    this.getImagesHandler();\r\n  }\r\n\r\n  //Updates the images array in client from the server\r\n  getImagesHandler = () => {\r\n    console.log(\"getImagesHandler invoked\");\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(\"/api/media\")\r\n      .then(images => {\r\n        this.setState({ images: images.data, loading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  //Sends a request to the backend to delete an image with a specific id\r\n  deleteImageHandler = idOfImage => {\r\n    console.log(\"deleteImageHandler invoked\");\r\n    axios.delete(\"./api/media/\" + idOfImage).then(() => {\r\n      this.getImagesHandler();\r\n    });\r\n  };\r\n  //Expand the selected image by opening it through the Modal component\r\n  enlargeImageHandler = pathOfImage => {\r\n    console.log(\"enlargeImageHandler invoked\");\r\n    this.setState({ isModalVisible: true, imagePath: pathOfImage });\r\n  };\r\n\r\n  //Manipulation of the Modal component - Closes it\r\n  closeModalHandler = () => {\r\n    this.setState({ isModalVisible: false });\r\n  };\r\n\r\n  render() {\r\n    //Showing a Spinner while fetching from the server\r\n    if (this.state.loading) return <Spinner />;\r\n\r\n    //Dynamically rendering images state, which is fetched from the server\r\n    let media = this.state.images.map(image => (\r\n      <li key={image.id}>\r\n        <MediaItem\r\n          id={image.id}\r\n          name={image.name}\r\n          path={image.path}\r\n          deleteImageHandler={this.deleteImageHandler}\r\n          enlargeImageHandler={this.enlargeImageHandler}\r\n        />\r\n      </li>\r\n    ));\r\n    return (\r\n      <>\r\n        <Modal\r\n          isModalVisible={this.state.isModalVisible}\r\n          closeModalHandler={this.closeModalHandler}\r\n          modalType=\"img\"\r\n        >\r\n          <img\r\n            className=\"pictureOfModal\"\r\n            src={this.state.imagePath}\r\n            alt=\"Media\"\r\n          />\r\n        </Modal>\r\n\r\n        <div className=\"MediaItems\">\r\n          <ul>{media}</ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MediaItems;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport MediaItems from \"./containers/MediaItems/MediaItems\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/media\" component={MediaItems} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n//Initialize BrowserRouter to the whole application\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}